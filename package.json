{
  "name": "vscode-search-everywhere",
  "displayName": "Search everywhere",
  "description": "Alternative for Go to symbol in workspace. Fast and fully customizable files, symbols search engine",
  "version": "0.0.1",
  "preview": true,
  "publisher": "kbysiec",
  "author": {
    "name": "Kamil Bysiec",
    "email": "kamil.bysiec@agileplayers.com",
    "url": "https://github.com/kbysiec"
  },
  "engines": {
    "vscode": "^1.41.0"
  },
  "categories": [
    "Other"
  ],
  "keywords": [
    "Search",
    "Go to",
    "Browser"
  ],
  "activationEvents": [
    "*"
  ],
  "main": "./dist/extension.js",
  "contributes": {
    "configuration": {
      "title": "Search everywhere",
      "properties": {
        "searchEverywhere.shouldDisplayNotificationInStatusBar": {
          "type": "boolean",
          "default": false,
          "description": "Should display indexing notification in toast or status bar."
        },
        "searchEverywhere.shouldInitOnStartup": {
          "type": "boolean",
          "default": false,
          "description": "Should indexing be initialized on Visual Studio Code startup."
        },
        "searchEverywhere.shouldHighlightSymbol": {
          "type": "boolean",
          "default": false,
          "description": "Should selected symbol be highlighted."
        },
        "searchEverywhere.shouldUseDebounce": {
          "type": "boolean",
          "default": false,
          "description": "Should the debounce function be used while returning filter results (useful in case of large workspace)."
        },
        "searchEverywhere.icons": {
          "type": "object",
          "default": {
            "0": "file",
            "4": "package",
            "5": "rocket",
            "6": "key",
            "10": "milestone",
            "11": "zap",
            "12": "beaker",
            "14": "bold"
          },
          "description": "Ability to define icons which should be displayed for appropriate symbol types. According to VSC API, only Octicons are allowed. Not defined symbol type will not have any icon."
        },
        "searchEverywhere.itemsFilter": {
          "type": "object",
          "default": {
            "allowedKinds": [],
            "ignoredKinds": [],
            "ignoredNames": []
          },
          "description": "Ability to define filter which should be applied to symbols."
        },
        "searchEverywhere.shouldUseItemsFilterPhrases": {
          "type": "boolean",
          "default": true,
          "description": "Should be possibility to filter by assigned filter phrases."
        },
        "searchEverywhere.itemsFilterPhrases": {
          "type": "object",
          "default": {
            "0": "$$",
            "4": "@@"
          },
          "description": "Phrases for symbol type which could be used for narrowing the results down."
        },
        "searchEverywhere.helpPhrase": {
          "type": "string",
          "default": "?",
          "description": "Phrase which should invoke help."
        },
        "searchEverywhere.exclude": {
          "type": "array",
          "default": [
            "**/.git",
            "**/.svn",
            "**/.hg",
            "**/.CVS",
            "**/.DS_Store",
            "**/package-lock.json",
            "**/yarn.lock",
            "**/node_modules/**",
            "**/bower_components/**",
            "**/coverage/**",
            "**/.vscode/**",
            "**/.vscode-test/**",
            "**/.history/**",
            "**/.cache/**",
            "**/.cache-loader/**",
            "**/out/**",
            "**/dist/**"
          ],
          "items": {
            "type": "string"
          },
          "description": "An array of globs. Any file matching these globs will be excluded from searching."
        },
        "searchEverywhere.include": {
          "type": "array",
          "default": [
            "**/*.{js,jsx,ts,tsx}"
          ],
          "items": {
            "type": "string"
          },
          "description": "An array of globs. Any file matching these globs will be included from searching."
        },
        "searchEverywhere.shouldUseFilesAndSearchExclude": {
          "type": "boolean",
          "default": false,
          "description": "Should \"Files: Exclude\" and \"Search: Exclude\" be used instead of extension exclude pattern."
        }
      }
    },
    "commands": [
      {
        "command": "searchEverywhere.search",
        "title": "Search everywhere: Search"
      },
      {
        "command": "searchEverywhere.reload",
        "title": "Search everywhere: Reload"
      }
    ]
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "rimraf ./dist/ && tsc -p ./",
    "watch": "tsc -watch -p ./",
    "pretest": "npm run compile",
    "test": "node ./dist/test/runTest.js",
    "cov:fixpaths": "gulp fixCoverageReportSrcPaths"
  },
  "devDependencies": {
    "@types/chai": "^4.2.11",
    "@types/glob": "^7.1.1",
    "@types/mocha": "^7.0.2",
    "@types/node": "^13.9.2",
    "@types/sinon": "^7.5.2",
    "@types/vscode": "^1.43.0",
    "chai": "^4.2.0",
    "decache": "^4.5.1",
    "glob": "^7.1.6",
    "gulp": "^4.0.2",
    "gulp-string-replacer": "^1.2.2",
    "istanbul": "^0.4.5",
    "mocha": "^7.1.1",
    "remap-istanbul": "^0.13.0",
    "rimraf": "^3.0.2",
    "sinon": "^9.0.1",
    "tslint": "^6.1.0",
    "typescript": "^3.8.3",
    "vscode-test": "^1.3.0"
  },
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": ""
  },
  "bugs": {
    "url": ""
  },
  "dependencies": {
    "debounce": "^1.2.0"
  }
}
